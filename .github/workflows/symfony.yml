name: Build
on:
    push:
        branches-ignore:
            - master
        pull_request:
            branches:
                - master
env:
    APP_ENV: test
jobs:
    build:
        name: Tests (PHP ${{ matrix.php-versions }})
        # https://hub.docker.com/_/ubuntu/
        runs-on: ubuntu-18.04
        services:
            mariadb:
                image: mariadb:10.1
                env:
                    MYSQL_ROOT_PASSWORD: toor
                    MYSQL_DATABASE: db_test
                    MYSQL_USER: symfony
                    MYSQL_PASSWORD: symfony
                ports:
                    - 3306:3306
        strategy:
            fail-fast: true
            matrix:
                php-versions: ['7.2', '7.3', '7.4']
        steps:
            # —— Setup Github actions 🐙 —————————————————————————————————————————————
            # https://github.com/actions/checkout (official)
            - name: Checkout
              uses: actions/checkout@v2

            # https://github.com/shivammathur/setup-php (community)
            - name: Setup PHP, extensions and composer with shivammathur/setup-php
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, ldap
              env:
                  update: true

            # https://github.com/zhulik/redis-action (community)
            - name: Setup Redis with zhulik/redis-action
              uses: zhulik/redis-action@1.1.0
              with:
                  redis version: '5'

            # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: make install

            # —— Symfony 🎵 ——————————————————————————————————————————————————————————
            - name: Check Symfony requirements
              run: vendor/bin/requirements-checker

            - name: Check the Symfony console
              run: php bin/console -V

            ## —— Coding standards ✨ ————————————————————————————————————————————————
            - name: Coding standards checks (php_codesniffer + PHPMD+ PHPStan)
              run: make cs

            ## —— Tests ✅ ———————————————————————————————————————————————————————————
#            - name: Load Doctrine fixtures
#              run: make load-fixtures
#
#            - name: Run functionnal and unit tests
#              run: make test

    ## —— Notification 🔔 ————————————————————————————————————————————————————
    slack:
        name: Slack
        runs-on: ubuntu-latest
        needs: [build]
        if: always()
        steps:
            - uses: technote-space/workflow-conclusion-action@v1
            - name: Send Slack notification
              uses: 8398a7/action-slack@v3
              with:
                  status: custom
                  fields: repo,message,author,took,commit,eventName,job
                  custom_payload: |
                      {
                          username: 'Github Actions',
                          attachments: [{
                            color: '${{ env.WORKFLOW_CONCLUSION }}' === 'success' ? 'good' : '${{ env.WORKFLOW_CONCLUSION }}' === 'failure' ? 'danger' : 'warning',
                            title: 'Password - Tests',
                            text: `Commit: ${process.env.AS_MESSAGE} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}\nBy ${process.env.AS_AUTHOR} ${{ env.WORKFLOW_CONCLUSION }}`,
                          }]
                        }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
              if: always() # Pick up events even if the job fails or is canceled.